<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[th0x4c 備忘録]]></title>
  <link href="http://th0x4c.github.com/atom.xml" rel="self"/>
  <link href="http://th0x4c.github.com/"/>
  <updated>2012-09-05T20:51:26+09:00</updated>
  <id>http://th0x4c.github.com/</id>
  <author>
    <name><![CDATA[Takashi Hashizume]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress をセットアップ]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/04/setup-octopress/"/>
    <updated>2012-09-04T23:15:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/04/setup-octopress</id>
    <content type="html"><![CDATA[<p>Jekyll + Octopress を使って Github Pages にブログを開設してみた。
<a href="http://octopress.org">Octopress</a> の <a href="http://octopress.org/docs/">Documentation のページ</a> に従えばよい。
ruby 1.9.3 が必要だが、今回は <a href="http://jruby.org">JRuby</a> を使用した。</p>

<h2>使用マシン</h2>

<ul>
<li>MacBook Pro Retina ディスプレイモデル(Mid 2012)</li>
<li>Mountain Lion (OS X 10.8.1)</li>
</ul>


<h2>JRuby のインストール</h2>

<p>~/local 配下に zip を解凍してインストール</p>

<pre><code>$ cd ~/local/
$ curl -O http://jruby.org.s3.amazonaws.com/downloads/1.7.0.preview2/jruby-bin-1.7.0.preview2.zip
$ unzip jruby-bin-1.7.0.preview2.zip
$ cd ~/local/bin/
$ ln -s ../jruby-1.7.0.preview2/bin/jruby .
</code></pre>

<h2>Octopress のセットアップ</h2>

<p><a href="http://octopress.org/docs/setup/">Octopress のセットアップ手順</a> に従う。</p>

<pre><code>$ cd ~/Documents/
$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress/
$ jruby -S gem install bundler
expr: syntax error
Fetching gem metadata from http://rubygems.org/.......
Using rake (0.9.2.2)
Using RedCloth (4.2.9)
Installing posix-spawn (0.3.6) with native extensions
Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

        /Users/hashi/local/bin/../jruby-1.7.0.preview2/bin/jruby extconf.rb
NotImplementedError: C extension support is not enabled. Pass -Xcext.enabled=true to JRuby or set JRUBY_OPTS or modify .jrubyrc to enable.

   (root) at /Users/hashi/local/bin/../jruby-1.7.0.preview2/lib/ruby/shared/mkmf.rb:8
  require at org/jruby/RubyKernel.java:1024
   (root) at /Users/hashi/local/bin/../jruby-1.7.0.preview2/lib/ruby/shared/rubygems/custom_require.rb:1
   (root) at extconf.rb:1


Gem files will remain installed in /Users/hashi/local/jruby-1.7.0.preview2/lib/ruby/gems/shared/gems/posix-spawn-0.3.6 for inspection.
Results logged to /Users/hashi/local/jruby-1.7.0.preview2/lib/ruby/gems/shared/gems/posix-spawn-0.3.6/ext/gem_make.out
An error occurred while installing posix-spawn (0.3.6), and Bundler cannot continue.
Make sure that `gem install posix-spawn -v '0.3.6'` succeeds before bundling.
</code></pre>

<p>なんかエラーとなったので、エラーメッセージの指示通りに <code>JRUBY_OPTS</code> を設定したらうまくいった。</p>

<pre><code>$ export JRUBY_OPTS="-Xcext.enabled=true"
$ jruby -S bundle install
$ jruby -S rake install
</code></pre>

<p>追加でインストールされたコマンドが使用できるようにシンボリックリンクを作成。
(もちろん、JRuby を解凍したフォルダ配下の <code>bin</code> ディレクトリに <code>PATH</code> が通ってれば不要。)</p>

<pre><code>$ cd ~/local/bin
$ ln -s ../jruby-1.7.0.preview2/bin/jekyll .
$ ln -s ../jruby-1.7.0.preview2/bin/compass .
$ ln -s ../jruby-1.7.0.preview2/bin/rackup .
</code></pre>

<h2>Github Pages の設定</h2>

<p>引き続き <a href="http://octopress.org/docs/deploying/github/">Octopress の Github Pages へのデプロイ手順</a> に従う。
まず、<code>username.github.com</code> というレポジトリを<a href="https://github.com/repositories/new">新規で作成</a>する。
ここで、次の <code>rake setup_github_pages</code> の <code>Repository url:</code> で HTTPS での指定(<code>https://github.com/username/username.github.com.git</code>)ができなかったため、レポジトリに <a href="https://help.github.com/articles/generating-ssh-keys">SSH key でのアクセス設定</a>した上で、<code>git@github.com:username/username.github.com.git</code> を指定する必要があった。</p>

<pre><code>$ cd ~/Documents/octopress
$ jruby -S rake setup_github_pages
expr: syntax error
Enter the read/write url for your repository
(For example, 'git@github.com:your_username/your_username.github.com)
Repository url: git@github.com:th0x4c/th0x4c.github.com.git
...
</code></pre>

<p>これで次のことが行われるとのこと。</p>

<ol>
<li>Ask you for your Github Pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from ‘origin’ to ‘octopress’</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog’s url according to your repository.</li>
<li>Setup a master branch in the _deploy directory for deployment.</li>
</ol>


<p>最後に以下を実行すれば <code>_deploy/</code> ディレクトリにファイルが生成され、Github のレポジトリに push され、Github Pages に反映される。</p>

<pre><code>$ jruby -S rake generate
$ jruby -S rake deploy
</code></pre>

<p>あとは、Octopress の以下のページを参照のこと。</p>

<ul>
<li><a href="http://octopress.org/docs/configuring/">Configure your blog</a></li>
</ul>


<p>とりあえず、<code>_config.yml</code> の <code>title:</code>, <code>author:</code> ぐらいを変更した。</p>

<h2>ブログ発行</h2>

<p><a href="http://octopress.org/docs/blogging/">Start blogging with Octopress</a>を参照。</p>

<p>基本的に <code>rake new_post["Zombie Ninjas Attack: A survivor's retrospective"]</code> (<code>Zombie ...</code>はタイトル)を実行して、<code>source/_posts</code> 配下のファイルを編集すればよい。</p>

<p><code>rake preview</code> で <code>http://localhost:4000</code> でプレビューを確認して、<code>rake gen_deploy</code> で Github Pages にデプロイ。</p>

<pre><code>$ jruby -S rake new_post["Setup Octopress"]
$ emacs -nw source/_posts/2012-09-04-setup-octopress.markdown
$ jruby -S rake preview
$ jruby -S gen_deploy
</code></pre>
]]></content>
  </entry>
  
</feed>
