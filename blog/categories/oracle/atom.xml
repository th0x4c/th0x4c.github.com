<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Oracle | th0x4c 備忘録]]></title>
  <link href="http://th0x4c.github.com/blog/categories/oracle/atom.xml" rel="self"/>
  <link href="http://th0x4c.github.com/"/>
  <updated>2012-09-07T23:04:13+09:00</updated>
  <id>http://th0x4c.github.com/</id>
  <author>
    <name><![CDATA[Takashi Hashizume]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Oracle] パスワードの管理]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-password-management/"/>
    <updated>2012-09-07T22:09:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-password-management</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>パスワードを大文字・小文字の区別をするようにする。
DB のパスワードについてはその他複雑なパスワードにするように強制する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li><p>管理者ガイド<br/>
-> 1 データベース管理スタート・ガイド<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56301/dba007.htm#i1006789">パスワード・ファイルの作成とメンテナンス</a></p></li>
<li><p>セキュリティ・ガイド<br/>
-> 3 認証の構成<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/network.112/b56285/authentication.htm#CHDJDCGI">パスワードでの大/小文字の区別の有効化または無効化</a><br/>
<a href="http://docs.oracle.com/cd/E16338_01/network.112/b56285/authentication.htm#i1007341">パスワードの複雑度検証の規定</a></p></li>
</ul>


<h2>SYSDBA でのログイン時のパスワード</h2>

<p>SYSDBA でのログイン(SYS ユーザで as sysdba でのログイン)時のパスワードを大文字・小文字の区別させるためにパスワードファイル(<code>$ORACLE_HOME/dbs/orapw&lt;ORACLE_SID&gt;</code>)を再作成する。</p>

<p><code>orapwd</code>を引数なしで実行すると、使い方が分かる。</p>

<pre><code>$ orapwd
Usage: orapwd file=&lt;fname&gt; entries=&lt;users&gt; force=&lt;y/n&gt; ignorecase=&lt;y/n&gt; nosysdba=&lt;y/n&gt;

  where
    file - name of password file (required),
    password - password for SYS will be prompted if not specified at command line,
    entries - maximum number of distinct DBA (optional),
    force - whether to overwrite existing file (optional),
    ignorecase - passwords are case-insensitive (optional),
    nosysdba - whether to shut out the SYSDBA logon (optional Database Vault only).

  There must be no spaces around the equal-to (=) character.
</code></pre>

<p><code>ignorecase=n</code> で再作成すれば大文字・小文字が区別される。
ちなみにパスワードファイルのファイル名は <code>orapw&lt;ORACLE_SID&gt;</code> でなければならない。</p>

<pre><code>$ cd $ORACLE_HOME/dbs
$ rm orapwPROD1
$ orapwd file=orapwPROD1 password=oracle ignorecase=n
</code></pre>

<p>大文字・小文字が区別されるか確認。</p>

<pre><code>SQL&gt; connect sys/oracle@PROD1 as sysdba
Connected.
SQL&gt; connect sys/ORACLE@PROD1 as sysdba
ERROR:
ORA-01017: invalid username/password; logon denied


Warning: You are no longer connected to ORACLE.
</code></pre>

<h2>DB ユーザのパスワード</h2>

<h3>大文字・小文字の区別</h3>

<p>DB ユーザのパスワードの大文字・小文字を区別するためには初期かパラメータ <code>SEC_CASE_SENSITIVE_LOGON</code> を <code>TRUE</code> にする。(デフォルトは <code>TRUE</code>)</p>

<pre><code>SQL&gt; ALTER SYSTEM SET SEC_CASE_SENSITIVE_LOGON = TRUE;

System altered.
</code></pre>

<h3>複雑なパスワードを強制</h3>

<p><code>$ORACLE_HOME/rdbms/admin/utlpwdmg.sql</code> を実行することで、デフォルトのプロファイルを使用するユーザがパスワード変更する際に以下がチェックされるようになる。</p>

<ul>
<li>パスワードの長さが8文字以上30文字以内であること。</li>
<li>パスワードがユーザー名と同一でないこと。ユーザー名のスペルを逆にしたり、ユーザー名に数字を追加したパスワードでないこと。</li>
<li>サーバー名と同一であったり、サーバー名に数字1から100を追加したパスワードでないこと。</li>
<li>単純なパスワードでないこと(例: welcome1、database1、account1、user1234、password1、oracle、oracle123、computer1、abcdefg1、change_on_install)。</li>
<li>パスワードに少なくとも数字が1つと英字が1つ含まれていること。</li>
<li>以前のパスワードとの違いが3文字以上あること。</li>
</ul>


<p><code>$ORACLE_HOME/rdbms/admin/utlpwdmg.sql</code> の内容を確認すると分かるように、パスワード検証関数 <code>verify_function_11G</code> が作成されてデフォルトプロファイル(<code>DEFAULT</code>)が変更されている。(パスワードの存続期間等も設定される)</p>

<pre><code>$ cat $ORACLE_HOME/rdbms/admin/utlpwdmg.sql
...(*snip*)

-- This script sets the default password resource parameters
-- This script needs to be run to enable the password features.
-- However the default resource parameters can be changed based
-- on the need.
-- A default password complexity function is also provided.
-- This function makes the minimum complexity checks like
-- the minimum length of the password, password not same as the
-- username, etc. The user may enhance this function according to
-- the need.
-- This function must be created in SYS schema.
-- connect sys/&lt;password&gt; as sysdba before running the script

CREATE OR REPLACE FUNCTION verify_function_11G
...(*snip*)
END;
/

-- This script alters the default parameters for Password Management
-- This means that all the users on the system have Password Management
-- enabled and set to the following values unless another profile is
-- created with parameter values set to different value or UNLIMITED
-- is created and assigned to the user.

ALTER PROFILE DEFAULT LIMIT
PASSWORD_LIFE_TIME 180
PASSWORD_GRACE_TIME 7
PASSWORD_REUSE_TIME UNLIMITED
PASSWORD_REUSE_MAX UNLIMITED
FAILED_LOGIN_ATTEMPTS 10
PASSWORD_LOCK_TIME 1
PASSWORD_VERIFY_FUNCTION verify_function_11G;
...(*snip*)
</code></pre>

<p>ということで、<code>utlpwdmg.sql</code> を実行する。</p>

<pre><code>$ sqlplus '/as sysdba'
SQL&gt; @?/rdbms/admin/utlpwdmg.sql

Function created.


Profile altered.


Function created.
</code></pre>

<p>他のプロファイルも変更する場合は、<code>ALTER PROFILE</code> を実行する必要がある。</p>

<pre><code>SQL&gt; ALTER PROFILE &lt;profile名&gt; LIMIT
     PWSSWORD_VERIFY_FUNCTION verify_function_11G;
</code></pre>

<p>実際にパスワードを変更してチェックに引っかかるか確認してみる。</p>

<pre><code>SQL&gt; alter user scott identified by tiger;
alter user scott identified by tiger
*
ERROR at line 1:
ORA-28003: password verification for the specified password failed
ORA-20001: Password length less than 8
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] 自動診断リポジトリの設定]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-automatic-diagnostic-repository/"/>
    <updated>2012-09-07T21:27:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-automatic-diagnostic-repository</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>Oracle Database のログ出力先を変更する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li><p>管理者ガイド<br/>
-> 9 診断データの管理<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56301/diag001.htm#CHDIABAA">自動診断リポジトリの構造、内容および場所</a></p></li>
<li><p>リファレンス<br/>
-> 1 初期化パラメータ<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56311/initparams077.htm#I1010280">DIAGNOSTIC_DEST</a></p></li>
<li><p>Net Services管理者ガイド<br/>
-> 16 Oracle Net Servicesのトラブルシューティング<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/network.112/b56288/trouble.htm#BABHDHGG">自動診断リポジトリの理解</a></p></li>
</ul>


<h2>設定</h2>

<p>Oracle Database 11gR1 より、各種ログの出力先が"自動診断リポジトリ(Automatic Diagnostic Repository, ADR)"という構造になった。</p>

<ul>
<li>Oracle Database のログ</li>
</ul>


<p>Oracle Database のログの出力先は初期化パラメータ <code>DIAGNOSTIC_DEST</code> にて設定する。
例えば、<code>/home/oracle</code> 配下に変更する場合は以下のようにパラメータ変更を行う。
(動的に変更可能なので DB 再起動は不要。)</p>

<pre><code>$ sqlplus '/as sysdba'
SQL&gt; ALTER SYSTEM SET DIAGNOSTIC_DEST = "/home/oracle" SCOPE = BOTH;

System altered.
</code></pre>

<p>指定したディレクトリ配下に <code>diag/rdbms</code> ディレクトリが作成され、その配下に alert.log やトレースが出力される。</p>

<ul>
<li>Listener のログ</li>
</ul>


<p>Listener のログ出力先は <code>listener.ora</code> 内の <code>ADR_BASE_&lt;リスナー名&gt;</code> で設定する。</p>

<pre><code>$ vi $ORACLE_HOME/network/admin/listener.ora # 以下を編集 or 追加
ADR_BASE_LISTENER = /home/oracle
</code></pre>

<p>設定を反映させるために Listener を再起動</p>

<pre><code>$ lsnrctl stop
$ lsnrctl start
</code></pre>

<p>これで、指定したディレクトリ配下に <code>diag/tnslsnr</code> ディレクトリができて、その配下に listener.log が出力される。</p>

<ul>
<li>Oracle Net Client のログ</li>
</ul>


<p>Oracle Net Client のログは <code>sqlnet.ora</code> 内の <code>ADR_BASE</code> パラメータで設定する。</p>

<pre><code>$ vi $ORACLE_HOME/network/admin/sqlnet.ora # 以下を編集 or 追加
ADR_BASE = /home/oracle
</code></pre>

<p>これで、ログ出力時は指定したディレクトリ配下に <code>diag/clients</code> ディレクトリができて、そこに出力される。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] ダイレクト NFS クライアント]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-direct-nfs-client/"/>
    <updated>2012-09-07T19:24:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-direct-nfs-client</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>OS の NFS クライアントのかわりに、Oracle の"ダイレクト NFS クライアント"を使用して NFS 上のファイルにアクセスするように Oracle の構成を変更する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li>インストレーション・ガイド for Linux<br/>
-> 5 Oracle Databaseのインストール後の作業<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/install.112/b56273/post_inst_task.htm#CHDIDHCH">5.3.9.1 ダイレクトNFSクライアント</a></li>
</ul>


<h2>ダイレクト NFS クライアントの有効化</h2>

<ul>
<li>libodm11.so の置き換え</li>
</ul>


<p><code>$ORACLE_HOME/lib/libnfsodm11.so</code> を元々存在する <code>$ORACLE_HOME/lib/libodm11.so</code> と置き換えるだけでよい。11gR2 ではこれを実行するために <code>$ORACLE_HOME/rdbms/lib/ins_rdbms.mk</code> に <code>dnfs_on</code> というターゲットがある。11gR1 では、手動でコピーが必要だった。</p>

<pre><code>$ cd $ORACLE_HOME/rdbms/lib
$ make -f ins_rdbms.mk dnfs_on
</code></pre>

<p>内容は <code>libodm11.so</code> をバックアップしておいて <code>libnfsodm11.so</code> と置き換えているだけ。</p>

<pre><code>$ make -n -f ins_rdbms.mk dnfs_on
if [ ! -f /u01/app/oracle/product/11.2.0/dbhome_1/rdbms/lib/libodm11.so.dummy ]; then \
        cp /u01/app/oracle/product/11.2.0/dbhome_1/lib/libodm11.so /u01/app/oracle/product/11.2.0/dbhome_1/rdbms/lib/libodm11.so.dummy; \
        fi
rm -f /u01/app/oracle/product/11.2.0/dbhome_1/lib/libodm11.so; cp /u01/app/oracle/product/11.2.0/dbhome_1/lib/libnfsodm11.so /u01/app/oracle/product/11.2.0/dbhome_1/lib/libodm11.so
</code></pre>

<ul>
<li>DB 再起動</li>
</ul>


<p>設定変更を有効にするために DB インスタンスを再起動する。</p>

<h2>ダイレクト NFS クライアントの無効化</h2>

<ul>
<li>libodm11.so の置き換え</li>
</ul>


<p>バックアップしておいた <code>libodm11.so</code> を戻すだけでよい。11gR2 ではこれを実行するために <code>$ORACLE_HOME/rdbms/lib/ins_rdbms.mk</code> に <code>dnfs_off</code> というターゲットがある。11gR1 では、手動でコピーが必要だった。</p>

<pre><code>$ cd $ORACLE_HOME/rdbms/lib
$ make -f ins_rdbms.mk dnfs_off
</code></pre>

<ul>
<li>DB 再起動</li>
</ul>


<p>設定変更を有効にするために DB インスタンスを再起動する。</p>

<h2>確認方法</h2>

<p>ダイレクト NFS クライアントが有効な場合、DB 起動時に <code>alert.log</code> に以下の出力がある。</p>

<pre><code>Oracle instance running with ODM: Oracle Direct NFS ODM Library Version 3.0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] 暗号化された表領域の作成]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-encrypting-a-tablespace/"/>
    <updated>2012-09-07T17:58:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-encrypting-a-tablespace</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>暗号化された表領域を作成する。<br/>
"透過的データ暗号化"という機能で、表の列もしくは表領域全体を暗号化できるが、今回は表領域の暗号化を行う。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li><p>2日でセキュリティ・ガイド<br/>
-> 6 データの保護<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56296/tdpsg_securing_data.htm#CHDBHJEG">透過的データ暗号化を使用するためのデータの構成</a></p></li>
<li><p>管理者ガイド<br/>
-> 14 表領域の管理<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56301/tspaces002.htm#BABBJGAF">暗号化された表領域</a></p></li>
</ul>


<h2>作成</h2>

<p>"透過的データ暗号化"を使用して表領域を暗号化するためには以下の手順が必要。</p>

<ol>
<li>ウォレット(マスター暗号化キーが格納される)を DB 外の OS 上のファイルとして作成</li>
<li>ウォレットを開く(データの暗号化が開始される)</li>
<li>表領域の作成</li>
</ol>


<p>以下、マニュアルの手順に従い作成する。</p>

<ul>
<li>ウォレットを格納するディレクトリを作成</li>
</ul>


<p>OS 上でディレクトリ作成</p>

<pre><code>$ mkdir /home/oracle/ORA_WALLETS
</code></pre>

<ul>
<li>sqlnet.ora ファイルにウォレットを格納するディレクトリを指定</li>
</ul>


<p>sqlnet.ora ファイルを編集</p>

<pre><code>$ vi $ORACLE_HOME/network/admin/sqlnet.ora
$ cat $ORACLE_HOME/network/admin/sqlnet.ora
ENCRYPTION_WALLET_LOCATION=
 (SOURCE=
  (METHOD=file)
   (METHOD_DATA=
    (DIRECTORY=/home/oracle/ORA_WALLETS)))
</code></pre>

<ul>
<li><p>(ここで compatible 初期化バラメータの値が 10.2 より小さい場合は DB 再起動が必要)</p></li>
<li><p>ウォレットを作成</p></li>
</ul>


<p>パスワード(以下の例では <code>"oracle"</code>)を指定する。このとき、パスワードは二重引用府(")で囲む必要がある。
これでウォレット格納ディレクトリにウォレットの OS ファイルができる。</p>

<pre><code>$ sqlplus '/as sysdba'
SQL&gt; ALTER SYSTEM SET ENCRYPTION KEY IDENTIFIED BY "oracle";

System altered.

$ ls /home/oracle/ORA_WALLETS
ewallet.p12
</code></pre>

<ul>
<li>ウォレットを開く</li>
</ul>


<p>以下の <code>ALTER SYSTEM</code> によりウォレットを開く。この場合もパスワードは二重引用符で囲む必要がある。
ちなみにウォレット作成直後は開かれた状態となっている。</p>

<pre><code>SQL&gt; ALTER SYSTEM SET ENCRYPTION WALLET OPEN IDENTIFIED BY "oracle";

System altered.
</code></pre>

<ul>
<li>暗号化された表領域の作成</li>
</ul>


<p>以下のように、デフォルトの暗号化アルゴリズムを使用して暗号化された表領域を作成。暗号化アルゴリズムを指定する場合は <code>ENCRYPTION USING 'AES256'</code> などとする。</p>

<pre><code>SQL&gt; CREATE TABLESPACE securespace
     DATAFILE '/u01/app/oracle/oradata/PROD1/secure01.dbf' SIZE 100M
     ENCRYPTION
     DEFAULT STORAGE(ENCRYPT);

Tablespace created.
</code></pre>

<h2>確認方法</h2>

<ul>
<li>ウォレットが開いているか閉じているかのチェック</li>
</ul>


<p><code>V$ENCRYPTION_VIEW</code> ビューを問い合わせる。</p>

<pre><code>SQL&gt; SELECT * FROM V$ENCRYPTION_WALLET;

WRL_TYPE   WRL_PARAMETER                  STATUS
---------- ------------------------------ ----------
file       /home/oracle/ORA_WALLETS       OPEN
</code></pre>

<ul>
<li>表領域が暗号化されているかのチェック</li>
</ul>


<p><code>DBA_TABLESPACES.ENCRYPTED</code> 列を確認する。</p>

<pre><code>SQL&gt; SELECT TABLESPACE_NAME, ENCRYPTED FROM DBA_TABLESPACES;

TABLESPACE_NAME      ENCRYPTED
-------------------- ----------
SYSTEM               NO
SYSAUX               NO
UNDOTBS1             NO
TEMP                 NO
USERS                NO
EXAMPLE              NO
SECURESPACE          YES
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] ネットワーク構成]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/05/oracle-net-services/"/>
    <updated>2012-09-05T21:50:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/05/oracle-net-services</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>Oracle DB にネットワーク接続できるように構成する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>サーバー側のネットワーク構成</h2>

<p><code>netca</code> により構成する。</p>

<ul>
<li><p><code>netca</code> を起動</p>

<p>  $ netca</p></li>
<li><p>"リスナー構成" を選択</p></li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-1.png" width="600" height="400"></p>

<ul>
<li>"追加"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-2.png" width="600" height="400"></p>

<ul>
<li>リスナー名の設定。今回はリスナー名はデフォルトの"LISTENER"のまま。</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-3.png" width="600" height="400"></p>

<ul>
<li>プロトコルの選択</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-4.png" width="600" height="400"></p>

<ul>
<li>ポート番号の指定。今回は標準ポート 1521 を使用。</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-5.png" width="600" height="400"></p>

<ul>
<li>"いいえ"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-6.png" width="600" height="400"></p>

<ul>
<li>"次へ"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-7.png" width="600" height="400"></p>

<ul>
<li>"完了"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-8.png" width="600" height="400"></p>

<p>これでリスナーの設定ファイル <code>$ORACLE_HOME/network/admin/listener.ora</code> が作成される。</p>

<pre><code>$ cat $ORACLE_HOME/network/admin/listener.ora
# listener.ora Network Configuration File: /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora
# Generated by Oracle configuration tools.

LISTENER =
  (DESCRIPTION_LIST =
    (DESCRIPTION =
      (ADDRESS = (PROTOCOL = TCP)(HOST = sv1.local)(PORT = 1521))
      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))
    )
  )

ADR_BASE_LISTENER = /u01/app/oracle
</code></pre>

<h2>クライアント側のネットワーク構成</h2>

<p>同じく <code>netca</code> により構成する。</p>

<ul>
<li><p><code>netca</code> を起動</p>

<p>  $ netca</p></li>
<li><p>"ローカル・ネット・サービス名構成" を選択</p></li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-9.png" width="600" height="400"></p>

<ul>
<li>"追加"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-10.png" width="600" height="400"></p>

<ul>
<li>サービス名を設定。通常は DB のグローバル・データベース名(db_name.db_domain)を入力。</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-11.png" width="600" height="400"></p>

<ul>
<li>プロトコルの選択</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-12.png" width="600" height="400"></p>

<ul>
<li>ホスト名, ポート番号を設定</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-13.png" width="600" height="400"></p>

<ul>
<li>接続テスト。今回は行わない。</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-14.png" width="600" height="400"></p>

<ul>
<li>ネット・サービス名の設定。</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-15.png" width="600" height="400"></p>

<ul>
<li>"いいえ"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-16.png" width="600" height="400"></p>

<ul>
<li>"次へ"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-17.png" width="600" height="400"></p>

<ul>
<li>"完了"</li>
</ul>


<p><img src="/images/2012-09-05-oracle-net-services/netca-18.png" width="600" height="400"></p>

<p>これでクライアントのネットワーク設定ファイル <code>$ORACLE_HOME/network/admin/tnsnames.ora</code> が作成される。</p>

<pre><code>$ cat $ORACLE_HOME/network/admin/tnsnames.ora 
# tnsnames.ora Network Configuration File: /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/tnsnames.ora
# Generated by Oracle configuration tools.

PROD1 =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = sv1.local)(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = PROD1.local)
    )
  )
</code></pre>

<h2>接続テスト</h2>

<p>クライアントから DB にネットワーク接続できるか確認する。</p>

<ul>
<li>リスナーの起動</li>
</ul>


<p><code>lsnrctl start</code> を実行</p>

<pre><code>$ lsnrctl start

LSNRCTL for Linux: Version 11.2.0.3.0 - Production on 05-SEP-2012 23:02:48

Copyright (c) 1991, 2011, Oracle.  All rights reserved.

Starting /u01/app/oracle/product/11.2.0/dbhome_1/bin/tnslsnr: please wait...

TNSLSNR for Linux: Version 11.2.0.3.0 - Production
System parameter file is /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora
Log messages written to /u01/app/oracle/diag/tnslsnr/sv1/listener/alert/log.xml
Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=sv1.local)(PORT=1521)))
Listening on: (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1521)))

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=sv1.local)(PORT=1521)))
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR for Linux: Version 11.2.0.3.0 - Production
Start Date                05-SEP-2012 23:02:48
Uptime                    0 days 0 hr. 0 min. 0 sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Listener Parameter File   /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora
Listener Log File         /u01/app/oracle/diag/tnslsnr/sv1/listener/alert/log.xml
Listening Endpoints Summary...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=sv1.local)(PORT=1521)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1521)))
The listener supports no services
The command completed successfully
</code></pre>

<ul>
<li>DB インスタンスの起動</li>
</ul>


<p><code>sqlplus</code> からインスタンスの起動</p>

<pre><code>$ sqlplus '/as sysdba'
SQL&gt; startup
</code></pre>

<ul>
<li>インスタンスがリスナーに登録されていることを確認</li>
</ul>


<p><code>lsnrctl status</code> でサービスが登録されていることを確認する。</p>

<pre><code>$ lsnrctl status

LSNRCTL for Linux: Version 11.2.0.3.0 - Production on 05-SEP-2012 23:05:17

Copyright (c) 1991, 2011, Oracle.  All rights reserved.

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=sv1.local)(PORT=1521)))
STATUS of the LISTENER
------------------------
Alias                     LISTENER
Version                   TNSLSNR for Linux: Version 11.2.0.3.0 - Production
Start Date                05-SEP-2012 23:02:48
Uptime                    0 days 0 hr. 2 min. 28 sec
Trace Level               off
Security                  ON: Local OS Authentication
SNMP                      OFF
Listener Parameter File   /u01/app/oracle/product/11.2.0/dbhome_1/network/admin/listener.ora
Listener Log File         /u01/app/oracle/diag/tnslsnr/sv1/listener/alert/log.xml
Listening Endpoints Summary...
  (DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=sv1.local)(PORT=1521)))
  (DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(KEY=EXTPROC1521)))
Services Summary...
Service "PROD1.local" has 1 instance(s).
  Instance "PROD1", status READY, has 1 handler(s) for this service...
Service "PROD1XDB.local" has 1 instance(s).
  Instance "PROD1", status READY, has 1 handler(s) for this service...
The command completed successfully
</code></pre>

<ul>
<li>クライアントからネットワーク接続できることを確認</li>
</ul>


<p>クライアント側のネットワーク構成で指定したネット・サービス名で接続できることを確認する。</p>

<pre><code>$ sqlplus scott/tiger@PROD1

SQL*Plus: Release 11.2.0.3.0 Production on Wed Sep 5 23:07:13 2012

Copyright (c) 1982, 2011, Oracle.  All rights reserved.


Connected to:
Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production
With the Partitioning, OLAP, Data Mining and Real Application Testing options

SQL&gt; 
</code></pre>
]]></content>
  </entry>
  
</feed>
