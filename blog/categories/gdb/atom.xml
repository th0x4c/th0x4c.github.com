<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GDB | th0x4c 備忘録]]></title>
  <link href="http://th0x4c.github.com/blog/categories/gdb/atom.xml" rel="self"/>
  <link href="http://th0x4c.github.com/"/>
  <updated>2012-10-11T02:02:26+09:00</updated>
  <id>http://th0x4c.github.com/</id>
  <author>
    <name><![CDATA[Takashi Hashizume]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[GDB] 別環境で採取した core ファイルを解析する方法]]></title>
    <link href="http://th0x4c.github.com/blog/2012/10/10/gdb-analyze-a-core-file/"/>
    <updated>2012-10-10T20:28:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/10/10/gdb-analyze-a-core-file</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>別環境で採取した core ファイルを解析する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>GDB: GNU gdb 7.0.1-42.el5</li>
</ul>


<h2>解析に必要なファイル</h2>

<p>別環境で発生した core ファイルを解析するためには以下のファイルが必要。</p>

<ul>
<li>core ファイル</li>
<li>実行ファイル</li>
<li>共有ライブラリ</li>
</ul>


<p>例えば、以下のように <code>abort()</code> でわざと core を吐かせて試してみる。</p>

<pre><code>$ cat prog1.c
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main(int argc, char *argv[])
{
  printf("hello, world\n");
  abort();
  return 0;
}

$ gcc -o hello hello.c
$ ./hello
hello, world
Aborted (core dumped)
$ ls -ltr | tail -1
-rw------- 1 oracle oinstall 184320 Oct 10 20:59 core.7441
</code></pre>

<p>core.7441 という core ファイルが吐かれた。</p>

<p>実行ファイルは core ファイルに対して <code>file</code> コマンドを実行すれば確認できる。</p>

<pre><code>$ file core.7441
core.7441: ELF 64-bit LSB core file AMD x86-64, version 1 (SYSV), SVR4-style, from 'hello'
</code></pre>

<p><code>hello</code> という実行ファイルによってこの core が吐かれたことが分かる。</p>

<p>共有ライブラリは GDB で core を読み込んで <code>info share</code> で確認できる。</p>

<pre><code>$ gdb ./hello ./core.7441 
GNU gdb (GDB) Red Hat Enterprise Linux (7.0.1-42.el5)
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
&lt;http://www.gnu.org/software/gdb/bugs/&gt;...
Reading symbols from /tmp/hello...(no debugging symbols found)...done.
[New Thread 7441]
Reading symbols from /lib64/libc.so.6...(no debugging symbols found)...done.
Loaded symbols for /lib64/libc.so.6
Reading symbols from /lib64/ld-linux-x86-64.so.2...(no debugging symbols found)...done.
Loaded symbols for /lib64/ld-linux-x86-64.so.2
Core was generated by `./hello'.
Program terminated with signal 6, Aborted.
#0  0x00000037be430265 in raise () from /lib64/libc.so.6
(gdb) info share
From                To                  Syms Read   Shared Object Library
0x00000037be41d780  0x00000037be50ad68  Yes (*)     /lib64/libc.so.6
0x00000037be000a70  0x00000037be01682e  Yes (*)     /lib64/ld-linux-x86-64.so.2
(*): Shared library is missing debugging information.
</code></pre>

<p>共有ライブラリとしては以下が読み込まれていることが分かる。</p>

<ul>
<li>/lib64/libc.so.6</li>
<li>/lib64/ld-linux-x86-64.so.2</li>
</ul>


<p>なお、実行中に動的リンクを行うようなプログラムでなければ、共有ライブラリは <code>ldd</code> コマンドでも確認できる。</p>

<pre><code>$ ldd ./hello
        linux-vdso.so.1 =&gt;  (0x00007fffcd1ff000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00000037be400000)
        /lib64/ld-linux-x86-64.so.2 (0x00000037be000000)
</code></pre>

<p>以上より、この例では他の環境でこの core ファイルを解析するためには次のファイルを採取する必要がある。</p>

<ul>
<li>core ファイル => core.7441</li>
<li>実行ファイル => hello</li>
<li>共有ライブラリ => /lib64/libc.so.6, /lib64/ld-linux-x86-64.so.2</li>
</ul>


<h2>別環境での core の解析</h2>

<p>別環境に先ほど採取したファイルを展開する。
今回は以下のように配置した。</p>

<pre><code>/tmp/core.7441
/tmp/bin/hello
/tmp/lib/libc.so.6
/tmp/lib/ld-linux-x86-64.so.2
</code></pre>

<p>GDB でこの core を解析するためには、採取した共有ライブラリを読み込むために以下のように <code>solib-absolute-prefix</code>, <code>solib-search-path</code> を設定する。</p>

<pre><code>$ cd /tmp
$ gdb
(gdb) set solib-absolute-prefix /tmp/lib
(gdb) set solib-search-path /tmp/lib
(gdb) file ./bin/hello
(gdb) core-file ./core.7441 
</code></pre>

<p>実際の実行例は以下。</p>

<pre><code>$ gdb
GNU gdb (GDB) Red Hat Enterprise Linux (7.0.1-42.el5)
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
&lt;http://www.gnu.org/software/gdb/bugs/&gt;.
(gdb) set solib-absolute-prefix /tmp/lib
(gdb) set solib-search-path /tmp/lib
(gdb) file ./bin/hello
Reading symbols from /tmp/bin/hello...(no debugging symbols found)...done.
(gdb) core-file ./core.7441 
[New Thread 7441]
Reading symbols from /tmp/lib/libc.so.6...(no debugging symbols found)...done.
Loaded symbols for /tmp/lib/libc.so.6
Reading symbols from /tmp/lib/ld-linux-x86-64.so.2...(no debugging symbols found)...done.
Loaded symbols for /tmp/lib/ld-linux-x86-64.so.2
Core was generated by `./hello'.
Program terminated with signal 6, Aborted.
#0  0x00000037be430265 in raise () from /tmp/lib/libc.so.6
(gdb) bt
#0  0x00000037be430265 in raise () from /tmp/lib/libc.so.6
#1  0x00000037be431d10 in abort () from /tmp/lib/libc.so.6
#2  0x00000000004004f6 in main ()
</code></pre>
]]></content>
  </entry>
  
</feed>
