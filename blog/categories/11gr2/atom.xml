<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 11gR2 | th0x4c 備忘録]]></title>
  <link href="http://th0x4c.github.com/blog/categories/11gr2/atom.xml" rel="self"/>
  <link href="http://th0x4c.github.com/"/>
  <updated>2012-09-09T04:07:53+09:00</updated>
  <id>http://th0x4c.github.com/</id>
  <author>
    <name><![CDATA[Takashi Hashizume]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Oracle] マルチセクション・バックアップ]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/09/oracle-multisection-backup/"/>
    <updated>2012-09-09T03:25:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/09/oracle-multisection-backup</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>マルチセクション・バックアップにより効率的にバックアップを行う。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li>バックアップおよびリカバリ・ユーザーズ・ガイド<br/>
-> 10 データベースのバックアップ: 高度なトピック<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmbckad.htm#CHDBAHAD">セクションへの大規模なデータファイルのバックアップの分割</a></li>
</ul>


<h2>マルチセクション・バックアップの実行</h2>

<p>マルチセクション・バックアップにより、ファイルサイズが大きいデータ・ファイルを複数のバックアップ・ピースに分割してバックアップすることができる。パラレル化の設定がされていれば、複数のチャネルを使用して平行でバックアップされるためパフォーマンスが向上する。</p>

<p>マルチセクション・バックアップを行うためには、<code>SECTION SIZE</code> パラメータを指定して <code>BACKUP</code> を実行すればよい。</p>

<ul>
<li>必要に応じて、パラレル化の設定をする。(パラレル化の設定がされていないとマルチセクション・バックアップを実施しても複数バックアップ・ピースに分割されるがシリアルにバックアップされてあまり意味がない。)</li>
</ul>


<p><code>CONFIGURE</code> コマンドで設定</p>

<pre><code>RMAN&gt; CONFIGURE DEVICE TYPE DISK PARALLELISM 2;

new RMAN configuration parameters:
CONFIGURE DEVICE TYPE DISK PARALLELISM 2 BACKUP TYPE TO BACKUPSET;
new RMAN configuration parameters are successfully stored
starting full resync of recovery catalog
full resync complete
</code></pre>

<ul>
<li>マルチセクション・バックアップ実施</li>
</ul>


<p>以下の例では 約 350M の 1 つデータファイルからなる example 表領域のバックアップを行っている。パラレル度を 2 にしたので、チャネルが 2 つ(<code>ORA_DISK_1</code> と <code>ORA_DISK_2</code>)割り当てられてパラレルで動作する。また、セクションサイズを 100M で指定したので、データファイルを 100M に分けて 4 つのバックアップ・ピースでバックアップしている。(1 つのピースは 12800 blocks * 8k = 100M)</p>

<pre><code>RMAN&gt; BACKUP
      SECTION SIZE 100M
      TABLESPACE example;

Starting backup at 12-09-09
allocated channel: ORA_DISK_1
channel ORA_DISK_1: SID=145 device type=DISK
allocated channel: ORA_DISK_2
channel ORA_DISK_2: SID=140 device type=DISK
channel ORA_DISK_1: starting full datafile backup set
channel ORA_DISK_1: specifying datafile(s) in backup set
input datafile file number=00005 name=/u01/app/oracle/oradata/PROD1/example01.dbf
backing up blocks 1 through 12800
channel ORA_DISK_1: starting piece 1 at 12-09-09
channel ORA_DISK_2: starting full datafile backup set
channel ORA_DISK_2: specifying datafile(s) in backup set
input datafile file number=00005 name=/u01/app/oracle/oradata/PROD1/example01.dbf
backing up blocks 12801 through 25600
channel ORA_DISK_2: starting piece 2 at 12-09-09
channel ORA_DISK_1: finished piece 1 at 12-09-09
piece handle=/u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tsts_.bkp tag=TAG20120909T035001 comment=NONE
channel ORA_DISK_1: backup set complete, elapsed time: 00:00:01
channel ORA_DISK_1: starting full datafile backup set
channel ORA_DISK_1: specifying datafile(s) in backup set
input datafile file number=00005 name=/u01/app/oracle/oradata/PROD1/example01.dbf
backing up blocks 25601 through 38400
channel ORA_DISK_1: starting piece 3 at 12-09-09
channel ORA_DISK_2: finished piece 2 at 12-09-09
piece handle=/u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tsws_.bkp tag=TAG20120909T035001 comment=NONE
channel ORA_DISK_2: backup set complete, elapsed time: 00:00:01
channel ORA_DISK_2: starting full datafile backup set
channel ORA_DISK_2: specifying datafile(s) in backup set
input datafile file number=00005 name=/u01/app/oracle/oradata/PROD1/example01.dbf
backing up blocks 38401 through 44240
channel ORA_DISK_2: starting piece 4 at 12-09-09
channel ORA_DISK_1: finished piece 3 at 12-09-09
piece handle=/u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4ttyy_.bkp tag=TAG20120909T035001 comment=NONE
channel ORA_DISK_1: backup set complete, elapsed time: 00:00:02
channel ORA_DISK_2: finished piece 4 at 12-09-09
piece handle=/u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tv1o_.bkp tag=TAG20120909T035001 comment=NONE
channel ORA_DISK_2: backup set complete, elapsed time: 00:00:01
Finished backup at 12-09-09
</code></pre>

<p>バックアップの確認。確かに 4 つのバックアップ・ピースに分かれている。</p>

<pre><code>RMAN&gt; list backup;
...(*snip*)

BS Key  Type LV Size       Device Type Elapsed Time Completion Time
------- ---- -- ---------- ----------- ------------ ---------------
956     Full    69.01M     DISK        00:00:02     12-09-09
  List of Datafiles in backup set 956
  File LV Type Ckp SCN    Ckp Time Name
  ---- -- ---- ---------- -------- ----
  5       Full 1160848    12-09-09 /u01/app/oracle/oradata/PROD1/example01.dbf

  Backup Set Copy #1 of backup set 956
  Device Type Elapsed Time Completion Time Compressed Tag
  ----------- ------------ --------------- ---------- ---
  DISK        00:00:02     12-09-09        NO         TAG20120909T035001

    List of Backup Pieces for backup set 956 Copy #1
    BP Key  Pc# Status      Piece Name
    ------- --- ----------- ----------
    958     1   AVAILABLE   /u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tsts_.bkp
    959     2   AVAILABLE   /u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tsws_.bkp
    960     3   AVAILABLE   /u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4ttyy_.bkp
    961     4   AVAILABLE   /u01/app/oracle/fast_recovery_area/PROD1/backupset/2012_09_09/o1_mf_nnndf_TAG20120909T035001_84q4tv1o_.bkp
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] RMAN の構成]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/09/oracle-configure-rman/"/>
    <updated>2012-09-09T01:47:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/09/oracle-configure-rman</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>RMAN の構成を変更して、以下ができるようにする。</p>

<ul>
<li>制御ファイルと SPFILE の自動バックアップ取得</li>
<li>バックアップの最適化(保存方針によって同一ファイルの不要なバックアップをしない)</li>
<li>ブロック・チェンジ・トラッキングを有効化(DB で変更されたブロックを記録しておくことで、増分バックアップ時のパフォーマンスが向上する。)</li>
</ul>


<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li><p>バックアップおよびリカバリ・ユーザーズ・ガイド<br/>
-> 5 Recovery Manager環境の構成<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmconfb.htm#i1019739">Recovery Managerの永続的な構成の表示およびクリア</a><br/>
   <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmconfb.htm#i1017907">制御ファイルおよびサーバー・パラメータ・ファイルの自動バックアップの構成</a><br/>
   <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmconfb.htm#sthref449">バックアップの最適化の構成</a></p>

<p>-> 9 データベースのバックアップ<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmbckba.htm#sthref883">ブロック・チェンジ・トラッキングの有効化および無効化</a></p></li>
</ul>


<h2>RMAN 構成の確認</h2>

<p>現在の RMAN 構成は <code>show all</code> にて確認できる。</p>

<pre><code>$ rman target / catalog rman/rman@EMREP
RMAN&gt; show all;

RMAN configuration parameters for database with db_unique_name PROD1 are:
CONFIGURE RETENTION POLICY TO REDUNDANCY 1; # default
CONFIGURE BACKUP OPTIMIZATION OFF; # default
CONFIGURE DEFAULT DEVICE TYPE TO DISK; # default
CONFIGURE CONTROLFILE AUTOBACKUP OFF; # default
CONFIGURE CONTROLFILE AUTOBACKUP FORMAT FOR DEVICE TYPE DISK TO '%F'; # default
CONFIGURE DEVICE TYPE DISK PARALLELISM 1 BACKUP TYPE TO BACKUPSET; # default
CONFIGURE DATAFILE BACKUP COPIES FOR DEVICE TYPE DISK TO 1; # default
CONFIGURE ARCHIVELOG BACKUP COPIES FOR DEVICE TYPE DISK TO 1; # default
CONFIGURE MAXSETSIZE TO UNLIMITED; # default
CONFIGURE ENCRYPTION FOR DATABASE OFF; # default
CONFIGURE ENCRYPTION ALGORITHM 'AES128'; # default
CONFIGURE COMPRESSION ALGORITHM 'BASIC' AS OF RELEASE 'DEFAULT' OPTIMIZE FOR LOAD TRUE ; # default
CONFIGURE ARCHIVELOG DELETION POLICY TO NONE; # default
CONFIGURE SNAPSHOT CONTROLFILE NAME TO '/u01/app/oracle/product/11.2.0/dbhome_1/dbs/snapcf_PROD1.f'; # default
</code></pre>

<h2>制御ファイル, SPFILE の自動バックアップ</h2>

<p><code>BACKUP</code> コマンドが実行されるときに、制御ファイルと SPFILE も自動的にバックアップするように設定する。</p>

<pre><code>RMAN&gt; CONFIGURE CONTROLFILE AUTOBACKUP ON;

new RMAN configuration parameters:
CONFIGURE CONTROLFILE AUTOBACKUP ON;
new RMAN configuration parameters are successfully stored
starting full resync of recovery catalog
full resync complete
</code></pre>

<h2>バックアップの最適化</h2>

<p>バックアップの最適化を有効にすると、保存方針によって同一ファイルの不要なバックアップをしなくなる。例えば、保存方針が <code>REDUNDANCY 1</code> として USERS 表領域を READ ONLY にして、<code>BACKUP DATABASE</code> を実行すると USERS 表領域のバックアップは 2 つ(REDUNDANCY + 1)あればよいので、3 回目以降の <code>BACKUP DATABASE</code> では USERS 表領域のバックアップが取得されなくなる。</p>

<pre><code>RMAN&gt; CONFIGURE BACKUP OPTIMIZATION ON;

new RMAN configuration parameters:
CONFIGURE BACKUP OPTIMIZATION ON;
new RMAN configuration parameters are successfully stored
starting full resync of recovery catalog
full resync complete
</code></pre>

<h2>ブロック・チェンジ・トラッキングを有効化</h2>

<p>DB で変更されたブロックをブロック・チェンジ・トラッキング・ファイル上に記録するようにする。このことで、増分バックアップ時に変更があったブロックだけを読むだけでよくなり、データファイルのすべてのブロックの読み込みが不要になり、パフォーマンスが向上する。</p>

<p>マニュアルでは <code>DB_CREATE_FILE_DEST</code> の設定の記載があるが、ブロック・チェンジ・トラッキング・ファイルのパスをフルパスで指定する場合は <code>DB_CREATE_FILE_DEST</code> の設定は不要。</p>

<pre><code>SQL&gt; ALTER DATABASE ENABLE BLOCK CHANGE TRACKING
     USING FILE '/u01/app/oracle/oradata/PROD1/rman_change_track.f' REUSE;

Database altered.

SQL&gt; SELECT STATUS, FILENAME
     FROM V$BLOCK_CHANGE_TRACKING;

STATUS   FILENAME
-------- ------------------------------------------------------------
ENABLED  /u01/app/oracle/oradata/PROD1/rman_change_track.f
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] リカバリ・カタログのセットアップ]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/08/oracle-setup-recovery-catalog/"/>
    <updated>2012-09-08T23:44:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/08/oracle-setup-recovery-catalog</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>Recovery Manager(RMAN) のリカバリ・カタログをセットアップする。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li>バックアップおよびリカバリ・ユーザーズ・ガイド<br/>
-> 13 リカバリ・カタログの管理<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmcatdb.htm#i1013599">リカバリ・カタログの作成</a><br/>
   <a href="http://docs.oracle.com/cd/E16338_01/backup.112/b56269/rcmcatdb.htm#CIHECCEF">リカバリ・カタログへのデータベースの登録</a></li>
</ul>


<h2>リカバリ・カタログとは</h2>

<p>リカバリ・カタログには、RMAN で使用するメタデータ情報(バックアップ・ファイルの情報など)が格納されている。RMAN が使用するメタデータは通常は制御ファイルに格納されているが、リカバリ・カタログとして(リカバリのターゲットとなる DB とは別の) DB に格納することができる。リカバリ・カタログを使用するメリットは次のようなものがある。</p>

<ul>
<li><p>制御ファイルに格納されているメタデータと同様の情報が格納されているので、冗長性が確保される。制御ファイルが消失した場合も、リカバリ・カタログを使用すればいい。制御ファイルとの同期はバックアップ実行時などに自動で実行される。</p></li>
<li><p>複数の DB の RMAN メタデータを集中管理できる。</p></li>
<li><p>リカバリ・カタログには、制御ファイルより長期のメタデータ履歴を格納できる。よって、制御ファイルの履歴より前の時点にリカバリすることができる。</p></li>
<li><p>一部の RMAN 機能は、リカバリ・カタログが必須。例えば、リカバリ・カタログには Recovery Manager スクリプトを格納することができる。</p></li>
<li><p>Data Guard 環境で RMAN を使用する場合は、リカバリ・カタログが必要。</p></li>
</ul>


<h2>リカバリ・カタログの作成</h2>

<p>リカバリ・カタログを作成する DB にリカバリ・カタログを所有するスキーマを作成して、必要な権限を与え、リカバリ・カタログを作成する。</p>

<ul>
<li>リカバリ・カタログを所有するスキーマを作成</li>
</ul>


<p>リカバリ・カタログを格納する DB に接続してスキーマを作成。</p>

<pre><code>$ sqlplus sys/oracle@EMREP as sysdba
SQL&gt; CREATE USER rman IDENTIFIED BY rman
     TEMPORARY TABLESPACE temp
     DEFAULT TABLESPACE users
     QUOTA UNLIMITED ON users;

User created.
</code></pre>

<ul>
<li>必要な権限の付与</li>
</ul>


<p>リカバリ・カタログの管理に必要なすべての権限を含む <code>RECOVERY_CATALOG_OWNER</code> ロールを付与する。</p>

<pre><code>SQL&gt; GRANT RECOVERY_CATALOG_OWNER TO rman;

Grant succeeded.
</code></pre>

<ul>
<li>リカバリ・カタログの作成</li>
</ul>


<p>RMAN を使用して先ほど作成したリカバリ・カタログを所有するスキーマで接続して、リカバリ・カタログを作成。</p>

<pre><code>$ rman catalog rman/rman@EMREP
RMAN&gt; CREATE CATALOG;

recovery catalog created
</code></pre>

<h2>リカバリ・カタログへの DB の登録</h2>

<p>リカバリ・カタログにターゲットとなる DB を登録する。</p>

<ul>
<li><p>ターゲット DB がマウントしていない場合は、マウントまたはオープンする。</p></li>
<li><p>RMAN からターゲット DB, リカバリ・カタログに接続する。</p></li>
</ul>


<p>RMAN から以下のようにして接続</p>

<pre><code>$ export ORACLE_SID=PROD1
$ rman target / catalog rman/rman@EMREP

Recovery Manager: Release 11.2.0.3.0 - Production on Sun Sep 9 00:37:33 2012

Copyright (c) 1982, 2011, Oracle and/or its affiliates.  All rights reserved.

connected to target database: PROD1 (DBID=2014160803)
connected to recovery catalog database
</code></pre>

<ul>
<li>リカバリ・カタログにターゲット DB を登録</li>
</ul>


<p><code>REGISTER DATABASE</code> によりターゲット DB を登録する。</p>

<pre><code>RMAN&gt; REGISTER DATABASE;

database registered in recovery catalog
starting full resync of recovery catalog
full resync complete
</code></pre>

<ul>
<li>正常に登録されていることを確認</li>
</ul>


<p><code>REPORT SCHEMA</code> により正常に登録されていることを確認する。</p>

<pre><code>RMAN&gt; REPORT SCHEMA;

Report of database schema for database with db_unique_name PROD1

List of Permanent Datafiles
===========================
File Size(MB) Tablespace           RB segs Datafile Name
---- -------- -------------------- ------- ------------------------
1    720      SYSTEM               YES     /u01/app/oracle/oradata/PROD1/system01.dbf
2    550      SYSAUX               NO      /u01/app/oracle/oradata/PROD1/sysaux01.dbf
3    95       UNDOTBS1             YES     /u01/app/oracle/oradata/PROD1/undotbs01.dbf
4    5        USERS                NO      /u01/app/oracle/oradata/PROD1/users01.dbf
5    345      EXAMPLE              NO      /u01/app/oracle/oradata/PROD1/example01.dbf

List of Temporary Files
=======================
File Size(MB) Tablespace           Maxsize(MB) Tempfile Name
---- -------- -------------------- ----------- --------------------
1    29       TEMP                 32767       /u01/app/oracle/oradata/PROD1/temp01.dbf
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] EM エージェントのインストール]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-em-agent-installation/"/>
    <updated>2012-09-07T23:28:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-em-agent-installation</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>EM エージェントをインストールする。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
<li>EM: Oracle Enterprise Manager Grid Control 11g (11.1)</li>
</ul>


<h2>EM エージェントのインストール</h2>

<p>EM からインストールする。
事前に EM エージェントをインストールするサーバに ssh 接続できることを確認しておくこと。</p>

<ul>
<li>"デプロイ" タブから "エージェントのインストール" をクリック</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-1.png" width="720" height="450"></p>

<ul>
<li>"フレッシュ・インストール" をクリック</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-2.png" width="720" height="450"></p>

<ul>
<li>以下のように設定

<ul>
<li>"ホスト・リストの指定" : DB サーバのホスト名</li>
<li>"OS 資格証明" : DB サーバの OS ユーザ</li>
<li>"root.sh の実行" のチェックははずす(sudo が使えるようになっていないといけないため。)</li>
<li>"インストールのベース・ディレクトリ" : /u01/app/oracle/Middleware</li>
<li>"管理サーバの登録パスワード" : oracle11g (EM Grid Control インストール時に指定した SYSMAN パスワードと同じにした)</li>
</ul>
</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-3.png" width="720" height="450">
<img src="/images/2012-09-07-oracle-em-agent-installation/em-4.png" width="720" height="450">
<img src="/images/2012-09-07-oracle-em-agent-installation/em-5.png" width="720" height="450"></p>

<ul>
<li>"セキュリティ・アップデートをMy Oracle Support経由で受け取ります。" のチェックははずす。</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-6.png" width="720" height="450"></p>

<ul>
<li>"はい"</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-7.png" width="720" height="450"></p>

<ul>
<li>インストール中</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-8.png" width="720" height="450"></p>

<ul>
<li>インストール完了。"完了" をクリック。</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-9.png" width="720" height="450"></p>

<ul>
<li>DB サーバ上で root.sh を実行する。</li>
</ul>


<p>DB サーバ上で実行。</p>

<pre><code>$ cd /u01/app/oracle/Middleware/agent11g
$ su
# ./root.sh
</code></pre>

<h2>DB インスタンスを EM に登録する</h2>

<p>EM エージェントをインストールしただけでは DB インスタンスのステータスが保留状態なので構成する必要がある。</p>

<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-10.png" width="720" height="450"></p>

<ul>
<li>DB インスタンスを選択して "構成" をクリック</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-11.png" width="720" height="450"></p>

<ul>
<li>dbsnmp のパスワードを変更</li>
</ul>


<p>dbsnmp のパスワード(デフォルト:dbsnmp)を入力して "接続テスト" をクリックすると、失敗するので dbsnmp のパスワード変更を行う。</p>

<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-12.png" width="720" height="450"></p>

<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-13.png" width="720" height="450"></p>

<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-14.png" width="720" height="450"></p>

<p>dbsnmp のパスワードを変更したらもう一度 "接続テスト" を行い成功することを確認して "次へ" をクリック</p>

<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-15.png" width="720" height="450"></p>

<ul>
<li>確認して "発行"</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-16.png" width="720" height="450"></p>

<ul>
<li>構成中</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-17.png" width="720" height="450"></p>

<ul>
<li>"OK"</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-18.png" width="720" height="450"></p>

<ul>
<li>他の DB がある場合は同様に構成して、ステータスが正常になることを確認</li>
</ul>


<p><img src="/images/2012-09-07-oracle-em-agent-installation/em-19.png" width="720" height="450"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Oracle] パスワードの管理]]></title>
    <link href="http://th0x4c.github.com/blog/2012/09/07/oracle-password-management/"/>
    <updated>2012-09-07T22:09:00+09:00</updated>
    <id>http://th0x4c.github.com/blog/2012/09/07/oracle-password-management</id>
    <content type="html"><![CDATA[<h2>目的</h2>

<p>パスワードを大文字・小文字の区別をするようにする。
DB のパスワードについてはその他複雑なパスワードにするように強制する。</p>

<h2>環境</h2>

<ul>
<li>OS: Oracle Enterprise Linux 5.8</li>
<li>DB: Oracle Database 11g Release 2 (11.2.0.3)</li>
</ul>


<h2>マニュアル</h2>

<ul>
<li><p>管理者ガイド<br/>
-> 1 データベース管理スタート・ガイド<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/server.112/b56301/dba007.htm#i1006789">パスワード・ファイルの作成とメンテナンス</a></p></li>
<li><p>セキュリティ・ガイド<br/>
-> 3 認証の構成<br/>
-> <a href="http://docs.oracle.com/cd/E16338_01/network.112/b56285/authentication.htm#CHDJDCGI">パスワードでの大/小文字の区別の有効化または無効化</a><br/>
<a href="http://docs.oracle.com/cd/E16338_01/network.112/b56285/authentication.htm#i1007341">パスワードの複雑度検証の規定</a></p></li>
</ul>


<h2>SYSDBA でのログイン時のパスワード</h2>

<p>SYSDBA でのログイン(SYS ユーザで as sysdba でのログイン)時のパスワードを大文字・小文字の区別させるためにパスワードファイル(<code>$ORACLE_HOME/dbs/orapw&lt;ORACLE_SID&gt;</code>)を再作成する。</p>

<p><code>orapwd</code>を引数なしで実行すると、使い方が分かる。</p>

<pre><code>$ orapwd
Usage: orapwd file=&lt;fname&gt; entries=&lt;users&gt; force=&lt;y/n&gt; ignorecase=&lt;y/n&gt; nosysdba=&lt;y/n&gt;

  where
    file - name of password file (required),
    password - password for SYS will be prompted if not specified at command line,
    entries - maximum number of distinct DBA (optional),
    force - whether to overwrite existing file (optional),
    ignorecase - passwords are case-insensitive (optional),
    nosysdba - whether to shut out the SYSDBA logon (optional Database Vault only).

  There must be no spaces around the equal-to (=) character.
</code></pre>

<p><code>ignorecase=n</code> で再作成すれば大文字・小文字が区別される。
ちなみにパスワードファイルのファイル名は <code>orapw&lt;ORACLE_SID&gt;</code> でなければならない。</p>

<pre><code>$ cd $ORACLE_HOME/dbs
$ rm orapwPROD1
$ orapwd file=orapwPROD1 password=oracle ignorecase=n
</code></pre>

<p>大文字・小文字が区別されるか確認。</p>

<pre><code>SQL&gt; connect sys/oracle@PROD1 as sysdba
Connected.
SQL&gt; connect sys/ORACLE@PROD1 as sysdba
ERROR:
ORA-01017: invalid username/password; logon denied


Warning: You are no longer connected to ORACLE.
</code></pre>

<h2>DB ユーザのパスワード</h2>

<h3>大文字・小文字の区別</h3>

<p>DB ユーザのパスワードの大文字・小文字を区別するためには初期かパラメータ <code>SEC_CASE_SENSITIVE_LOGON</code> を <code>TRUE</code> にする。(デフォルトは <code>TRUE</code>)</p>

<pre><code>SQL&gt; ALTER SYSTEM SET SEC_CASE_SENSITIVE_LOGON = TRUE;

System altered.
</code></pre>

<h3>複雑なパスワードを強制</h3>

<p><code>$ORACLE_HOME/rdbms/admin/utlpwdmg.sql</code> を実行することで、デフォルトのプロファイルを使用するユーザがパスワード変更する際に以下がチェックされるようになる。</p>

<ul>
<li>パスワードの長さが8文字以上30文字以内であること。</li>
<li>パスワードがユーザー名と同一でないこと。ユーザー名のスペルを逆にしたり、ユーザー名に数字を追加したパスワードでないこと。</li>
<li>サーバー名と同一であったり、サーバー名に数字1から100を追加したパスワードでないこと。</li>
<li>単純なパスワードでないこと(例: welcome1、database1、account1、user1234、password1、oracle、oracle123、computer1、abcdefg1、change_on_install)。</li>
<li>パスワードに少なくとも数字が1つと英字が1つ含まれていること。</li>
<li>以前のパスワードとの違いが3文字以上あること。</li>
</ul>


<p><code>$ORACLE_HOME/rdbms/admin/utlpwdmg.sql</code> の内容を確認すると分かるように、パスワード検証関数 <code>verify_function_11G</code> が作成されてデフォルトプロファイル(<code>DEFAULT</code>)が変更されている。(パスワードの存続期間等も設定される)</p>

<pre><code>$ cat $ORACLE_HOME/rdbms/admin/utlpwdmg.sql
...(*snip*)

-- This script sets the default password resource parameters
-- This script needs to be run to enable the password features.
-- However the default resource parameters can be changed based
-- on the need.
-- A default password complexity function is also provided.
-- This function makes the minimum complexity checks like
-- the minimum length of the password, password not same as the
-- username, etc. The user may enhance this function according to
-- the need.
-- This function must be created in SYS schema.
-- connect sys/&lt;password&gt; as sysdba before running the script

CREATE OR REPLACE FUNCTION verify_function_11G
...(*snip*)
END;
/

-- This script alters the default parameters for Password Management
-- This means that all the users on the system have Password Management
-- enabled and set to the following values unless another profile is
-- created with parameter values set to different value or UNLIMITED
-- is created and assigned to the user.

ALTER PROFILE DEFAULT LIMIT
PASSWORD_LIFE_TIME 180
PASSWORD_GRACE_TIME 7
PASSWORD_REUSE_TIME UNLIMITED
PASSWORD_REUSE_MAX UNLIMITED
FAILED_LOGIN_ATTEMPTS 10
PASSWORD_LOCK_TIME 1
PASSWORD_VERIFY_FUNCTION verify_function_11G;
...(*snip*)
</code></pre>

<p>ということで、<code>utlpwdmg.sql</code> を実行する。</p>

<pre><code>$ sqlplus '/as sysdba'
SQL&gt; @?/rdbms/admin/utlpwdmg.sql

Function created.


Profile altered.


Function created.
</code></pre>

<p>他のプロファイルも変更する場合は、<code>ALTER PROFILE</code> を実行する必要がある。</p>

<pre><code>SQL&gt; ALTER PROFILE &lt;profile名&gt; LIMIT
     PWSSWORD_VERIFY_FUNCTION verify_function_11G;
</code></pre>

<p>実際にパスワードを変更してチェックに引っかかるか確認してみる。</p>

<pre><code>SQL&gt; alter user scott identified by tiger;
alter user scott identified by tiger
*
ERROR at line 1:
ORA-28003: password verification for the specified password failed
ORA-20001: Password length less than 8
</code></pre>
]]></content>
  </entry>
  
</feed>
